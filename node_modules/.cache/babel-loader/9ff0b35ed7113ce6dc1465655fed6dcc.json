{"remainingRequest":"/Users/jiwon/test/matching-frontend/node_modules/babel-loader/lib/index.js!/Users/jiwon/test/matching-frontend/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jiwon/test/matching-frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jiwon/test/matching-frontend/src/components/ChatRoom/_components/ChatRoomMessageInput.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jiwon/test/matching-frontend/src/components/ChatRoom/_components/ChatRoomMessageInput.vue","mtime":1660723455654},{"path":"/Users/jiwon/test/matching-frontend/babel.config.js","mtime":1660723455491},{"path":"/Users/jiwon/test/matching-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660264744188},{"path":"/Users/jiwon/test/matching-frontend/node_modules/babel-loader/lib/index.js","mtime":1652941041233},{"path":"/Users/jiwon/test/matching-frontend/node_modules/cache-loader/dist/cjs.js","mtime":1660264744188},{"path":"/Users/jiwon/test/matching-frontend/node_modules/@vue/cli-service/node_modules/vue-loader/lib/index.js","mtime":1660264748190}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IEFkZFNWRyBmcm9tICJAL2Fzc2V0cy9pY29ucy9hZGQuc3ZnIjsKaW1wb3J0IFNlbmRTVkcgZnJvbSAiQC9hc3NldHMvaWNvbnMvc2VuZC5zdmciOwppbXBvcnQgQ2hhdFJvb21Nb3JlQ29udGVudCBmcm9tICIuL0NoYXRSb29tTW9yZUNvbnRlbnQudnVlIjsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJDaGF0Um9vbU1lc3NhZ2VJbnB1dCIsCgogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0ZXh0OiAiIiwKICAgICAgc2hvd01vcmU6IGZhbHNlCiAgICB9OwogIH0sCgogIGNvbXB1dGVkOiB7CiAgICBjc3NWYXJpYWJsZXMoKSB7CiAgICAgIHJldHVybiB7CiAgICAgICAgaGVpZ2h0OiB0aGlzLnNob3dNb3JlID8gIjI1MHB4IiA6ICI0MHB4IgogICAgICB9OwogICAgfQoKICB9LAogIG1ldGhvZHM6IHsKICAgIHRvZ2dsZU1vcmUoKSB7CiAgICAgIHRoaXMuc2hvd01vcmUgPSAhdGhpcy5zaG93TW9yZTsKICAgIH0sCgogICAgdXBkYXRlVGV4dChldmVudCkgewogICAgICB0aGlzLnRleHQgPSBldmVudC50YXJnZXQudmFsdWU7CiAgICB9LAoKICAgIGNvbmZpcm1UZXh0KCkgewogICAgICB0aGlzLiRlbWl0KCJzZW50TWVzc2FnZUNvbnRlbnQiLCB0aGlzLnRleHQpOwogICAgICB0aGlzLnRleHQgPSAiIjsKICAgICAgdGhpcy4kcmVmcy50ZXh0SW5wdXQudmFsdWUgPSAiIjsKICAgIH0KCiAgfSwKICBjb21wb25lbnRzOiB7CiAgICBBZGRTVkcsCiAgICBTZW5kU1ZHLAogICAgQ2hhdFJvb21Nb3JlQ29udGVudAogIH0sCgogIG1vdW50ZWQoKSB7CiAgICB0aGlzLiRyZWZzLnRleHRJbnB1dC5mb2N1cygpOwogIH0KCn07"},{"version":3,"mappings":"AAkBA;AACA;AACA;AAEA;EACAA,4BADA;;EAEAC;IACA;MACAC,QADA;MAEAC;IAFA;EAIA,CAPA;;EAQAC;IACAC;MACA;QACAC;MADA;IAGA;;EALA,CARA;EAeAC;IACAC;MACA;IACA,CAHA;;IAIAC;MACA;IACA,CANA;;IAOAC;MACA;MACA;MACA;IACA;;EAXA,CAfA;EA4BAC;IACAC,MADA;IAEAC,OAFA;IAGAC;EAHA,CA5BA;;EAiCAC;IACA;EACA;;AAnCA","names":["name","data","text","showMore","computed","cssVariables","height","methods","toggleMore","updateText","confirmText","components","AddSVG","SendSVG","ChatRoomMoreContent","mounted"],"sourceRoot":"src/components/ChatRoom/_components","sources":["ChatRoomMessageInput.vue"],"sourcesContent":["<template>\n  <div class=\"wrapper\" :style=\"cssVariables\">\n    <div class=\"chat-input-wrapper\">\n      <AddSVG class=\"chat-add-icon\" @click=\"toggleMore\" />\n      <input\n        type=\"textarea\"\n        placeholder=\"메세지를 입력하세요.\"\n        @input=\"updateText($event)\"\n        @keyup.enter=\"confirmText($event)\"\n        ref=\"textInput\"\n      />\n      <SendSVG class=\"chat-send-icon\" @click=\"confirmText\" />\n    </div>\n    <ChatRoomMoreContent v-if=\"showMore\" />\n  </div>\n</template>\n\n<script>\nimport AddSVG from \"@/assets/icons/add.svg\";\nimport SendSVG from \"@/assets/icons/send.svg\";\nimport ChatRoomMoreContent from \"./ChatRoomMoreContent.vue\";\n\nexport default {\n  name: \"ChatRoomMessageInput\",\n  data() {\n    return {\n      text: \"\",\n      showMore: false,\n    };\n  },\n  computed: {\n    cssVariables() {\n      return {\n        height: this.showMore ? \"250px\" : \"40px\",\n      };\n    },\n  },\n  methods: {\n    toggleMore() {\n      this.showMore = !this.showMore;\n    },\n    updateText(event) {\n      this.text = event.target.value;\n    },\n    confirmText() {\n      this.$emit(\"sentMessageContent\", this.text);\n      this.text = \"\";\n      this.$refs.textInput.value = \"\";\n    },\n  },\n  components: {\n    AddSVG,\n    SendSVG,\n    ChatRoomMoreContent,\n  },\n  mounted() {\n    this.$refs.textInput.focus();\n  },\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.wrapper {\n  position: absolute;\n  bottom: 0;\n  height: var(height);\n  transition: height 150ms;\n}\n.chat-input-wrapper {\n  width: 100%;\n  height: 60px;\n  display: flex;\n  justify-content: center;\n  background-color: colors.$GRAY2;\n  z-index: 51;\n}\n\nsvg {\n  transform: scale(-50%);\n  border-radius: 50%;\n  transition: background-color 100ms;\n  cursor: pointer;\n\n  &:hover {\n    background-color: colors.$GRAY3;\n  }\n}\n\nbutton {\n  width: 40px;\n  height: 40px;\n  margin: 10px 0;\n  all: unset;\n  cursor: pointer;\n  transition: background-color 100ms;\n\n  &:hover {\n    background-color: #fefefe;\n    border-radius: 50%;\n  }\n}\n\ninput[type=\"textarea\"] {\n  border: none;\n  height: 28px;\n  width: calc(100% - 50px);\n  margin-bottom: 0;\n  margin-top: 10px;\n  margin-right: 12px;\n  padding-left: 10px;\n  border-radius: 10px;\n  background-color: colors.$GRAY3;\n  font-size: 14px;\n\n  &:focus {\n    outline: none;\n  }\n}\n</style>\n"]}]}